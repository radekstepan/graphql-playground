/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "#graphql\n  mutation Reset {\n    reset {\n      ok\n    }\n  }\n": types.ResetDocument,
    "#graphql\n  query GetReport(\n    $reportId: String!,\n    $includeName: Boolean!,\n    $includeTotalAmount: Boolean!,\n    $includeExceptions: Boolean!,\n    $includeEntries: Boolean!\n  ) {\n    report(reportId: $reportId) {\n      id\n      name @include(if: $includeName)\n      totalAmount @include(if: $includeTotalAmount)\n      exceptions @include(if: $includeExceptions) {\n        entryId\n        text\n      }\n      entries @include(if: $includeEntries) {\n        id\n        amount\n        receipt\n      }\n    }\n  }\n": types.GetReportDocument,
    "#graphql\n  query GetEntry(\n    $entryId: String!,\n    $includeAmount: Boolean!,\n    $includeReceipt: Boolean!,\n    $includeExceptions: Boolean!\n  ) {\n    entry(entryId: $entryId) {\n      id\n      amount @include(if: $includeAmount)\n      receipt @include(if: $includeReceipt)\n      exceptions @include(if: $includeExceptions) {\n        entryId\n        text\n      }\n    }\n  }\n": types.GetEntryDocument,
    "#graphql\n  query GetCashAdvances(\n    $reportId: String!\n  ) {\n    report(reportId: $reportId) {\n      cashAdvances {\n        id\n        amount\n      }\n    }\n  }\n": types.GetCashAdvancesDocument,
    "#graphql\n  mutation UpdateEntryAmount($entryId: String!) {\n    updateEntryAmount(entryId: $entryId) {\n      ok\n    }\n  }\n": types.UpdateEntryAmountDocument,
    "#graphql\n  mutation UpdateEntryReceipt($entryId: String!) {\n    updateEntryReceipt(entryId: $entryId) {\n      ok\n    }\n  }\n": types.UpdateEntryReceiptDocument,
};

export function graphql(source: "#graphql\n  mutation Reset {\n    reset {\n      ok\n    }\n  }\n"): (typeof documents)["#graphql\n  mutation Reset {\n    reset {\n      ok\n    }\n  }\n"];
export function graphql(source: "#graphql\n  query GetReport(\n    $reportId: String!,\n    $includeName: Boolean!,\n    $includeTotalAmount: Boolean!,\n    $includeExceptions: Boolean!,\n    $includeEntries: Boolean!\n  ) {\n    report(reportId: $reportId) {\n      id\n      name @include(if: $includeName)\n      totalAmount @include(if: $includeTotalAmount)\n      exceptions @include(if: $includeExceptions) {\n        entryId\n        text\n      }\n      entries @include(if: $includeEntries) {\n        id\n        amount\n        receipt\n      }\n    }\n  }\n"): (typeof documents)["#graphql\n  query GetReport(\n    $reportId: String!,\n    $includeName: Boolean!,\n    $includeTotalAmount: Boolean!,\n    $includeExceptions: Boolean!,\n    $includeEntries: Boolean!\n  ) {\n    report(reportId: $reportId) {\n      id\n      name @include(if: $includeName)\n      totalAmount @include(if: $includeTotalAmount)\n      exceptions @include(if: $includeExceptions) {\n        entryId\n        text\n      }\n      entries @include(if: $includeEntries) {\n        id\n        amount\n        receipt\n      }\n    }\n  }\n"];
export function graphql(source: "#graphql\n  query GetEntry(\n    $entryId: String!,\n    $includeAmount: Boolean!,\n    $includeReceipt: Boolean!,\n    $includeExceptions: Boolean!\n  ) {\n    entry(entryId: $entryId) {\n      id\n      amount @include(if: $includeAmount)\n      receipt @include(if: $includeReceipt)\n      exceptions @include(if: $includeExceptions) {\n        entryId\n        text\n      }\n    }\n  }\n"): (typeof documents)["#graphql\n  query GetEntry(\n    $entryId: String!,\n    $includeAmount: Boolean!,\n    $includeReceipt: Boolean!,\n    $includeExceptions: Boolean!\n  ) {\n    entry(entryId: $entryId) {\n      id\n      amount @include(if: $includeAmount)\n      receipt @include(if: $includeReceipt)\n      exceptions @include(if: $includeExceptions) {\n        entryId\n        text\n      }\n    }\n  }\n"];
export function graphql(source: "#graphql\n  query GetCashAdvances(\n    $reportId: String!\n  ) {\n    report(reportId: $reportId) {\n      cashAdvances {\n        id\n        amount\n      }\n    }\n  }\n"): (typeof documents)["#graphql\n  query GetCashAdvances(\n    $reportId: String!\n  ) {\n    report(reportId: $reportId) {\n      cashAdvances {\n        id\n        amount\n      }\n    }\n  }\n"];
export function graphql(source: "#graphql\n  mutation UpdateEntryAmount($entryId: String!) {\n    updateEntryAmount(entryId: $entryId) {\n      ok\n    }\n  }\n"): (typeof documents)["#graphql\n  mutation UpdateEntryAmount($entryId: String!) {\n    updateEntryAmount(entryId: $entryId) {\n      ok\n    }\n  }\n"];
export function graphql(source: "#graphql\n  mutation UpdateEntryReceipt($entryId: String!) {\n    updateEntryReceipt(entryId: $entryId) {\n      ok\n    }\n  }\n"): (typeof documents)["#graphql\n  mutation UpdateEntryReceipt($entryId: String!) {\n    updateEntryReceipt(entryId: $entryId) {\n      ok\n    }\n  }\n"];

export function graphql(source: string): unknown;
export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;